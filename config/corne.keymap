/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESCAPE  &kp Q  &kp W  &kp E         &kp R  &kp T        &kp Y      &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp RET     &kp A  &kp S  &kp D         &kp F  &kp G        &kp H      &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT   &kp Z  &kp X  &kp C         &kp V  &kp B        &kp N      &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RALT
                          &kp LEFT_GUI  &mo 1  &kp SPACE    &kp SPACE  &mo 2  &kp RCTRL
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp RG(GRAVE)  &kp EXCL      &kp AT        &kp HASH      &kp DLLR      &kp PRCNT    &kp CARET  &kp AMPS   &kp STAR   &kp LPAR          &kp RPAR           &kp BACKSLASH
&kp TAB        &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5       &kp MINUS  &kp EQUAL  &kp GRAVE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp PIPE
&kp RG(TAB)    &kp NUMBER_6  &kp N7        &kp N8        &kp N9        &kp N0       &kp UNDER  &kp PLUS   &kp TILDE  &kp LBRC          &kp RBRC           &kp RALT
                                           &trans        &trans        &trans       &trans     &trans     &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp F1        &kp F2            &kp F3                                  &kp F4                             &kp F5        &kp F6          &kp F7                &kp F8                &kp F9          &kp F10            &kp F11                 &kp F12
&kp C_REWIND  &kp C_PLAY_PAUSE  &kp C_FAST_FORWARD                      &kp C_MUTE                         &kp C_VOL_DN  &kp C_VOL_UP    &kp LEFT_ARROW        &kp DOWN_ARROW        &kp UP_ARROW    &kp RIGHT_ARROW    &kp RA(RC(LEFT_ARROW))  &kp RC(RA(RIGHT_ARROW))
&bt BT_CLR    &bt BT_NXT        &kp C_AC_DESKTOP_SHOW_ALL_APPLICATIONS  &kp C_AC_DESKTOP_SHOW_ALL_WINDOWS  &kp C_BRI_DN  &kp C_BRI_UP    &kp RG(RS(NUMBER_3))  &kp RG(RS(NUMBER_4))  &kp RG(RS(N5))  &kp RC(RA(RS(M)))  &kp RA(SPACE)           &kp RALT
                                                                        &trans                             &trans        &trans          &trans                &trans                &trans
            >;
        };
    };
};
